package pr21.pr21_1;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        // Создаем массив строк
        String[] stringArray = {"one", "two", "three"};
        // Создаем массив целых чисел
        Integer[] intArray = {1, 2, 3, 4, 5};

        // Конвертируем массив строк в список строк
        List<String> stringList = arrayToList(stringArray);
        // Конвертируем массив целых чисел в список целых чисел
        List<Integer> intList = arrayToList(intArray);

        // Выводим список строк на экран
        System.out.println("Список строк: " + stringList);
        // Выводим список чисел на экран
        System.out.println("Список чисел: " + intList);
    }

    // Метод для конвертации массива в список
    // Этот метод принимает массив элементов и возвращает список того же типа
    //  T является типом данных, который будет определен при вызове метода - generic c прошлой работы
    public static <T> List<T> arrayToList(T[] array) {
        // Создаем новый список, чтобы хранить элементы массива
        // Проходим по каждому элементу в массиве и добавляем его в список
        // Возвращаем список
        return new ArrayList<>(Arrays.asList(array));
    }
}

/*
List и ArrayList в Java тесно связаны, но они представляют разные вещи:

List:

List - это интерфейс, определенный в Java, который представляет упорядоченную коллекцию элементов, в которой могут быть дубликаты.
Он является частью Java Collections Framework и определяет базовые методы для работы с коллекциями, такие как add, get, remove, size, и другие.
List может быть реализован различными классами, такими как ArrayList, LinkedList, и Vector. Использование интерфейса List позволяет легко заменять одну реализацию на другую без изменения кода.
ArrayList:

ArrayList - это одна из конкретных реализаций интерфейса List.
Он представляет собой динамический массив, который автоматически расширяется по мере добавления элементов. Это означает, что вы можете добавлять и удалять элементы из ArrayList без указания размера при создании.
ArrayList предоставляет высокую производительность доступа к элементам по индексу, что делает его хорошим выбором для операций чтения и записи.

*/